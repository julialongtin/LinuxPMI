Index: linux-2.6.28.7/arch/x86/kernel/process.c
===================================================================
--- linux-2.6.28.7.orig/arch/x86/kernel/process.c
+++ linux-2.6.28.7/arch/x86/kernel/process.c
@@ -272,15 +272,32 @@ int user_thread(int (*fn)(void *), void 
 	regs.bx = (unsigned long) fn; // mig_handle_migration()
 	regs.dx = (unsigned long) arg; // rpid
 
+#ifdef CONFIG_X86_32
 	regs.ds = __USER_DS;
 	regs.es = __USER_DS;
 	regs.fs = __KERNEL_PERCPU;
+#else /* CONFIG_X86_32 */
+/*
+ * #ifdef CONFIG_X86_64
+ * I think the following two lines need to be fixed for 64bit GDT
+ * - See arch/x86/include/asm/segment.h
+ * -- FIXME: spook
+ */
+        regs.dx = __USER_DS;
+        regs.si = __USER_DS;
+        regs.di = __PER_CPU_SEG;
+#endif /* CONFIG_X86_64 */
 	regs.orig_ax = -1;
 	regs.ip = (unsigned long) user_thread_helper;
 	regs.cs = __KERNEL_CS | get_kernel_rpl();
 	regs.flags = X86_EFLAGS_IF | X86_EFLAGS_SF | X86_EFLAGS_PF | 0x2;
-	
+
+/* FIXME: spook: not sure that this needs to be done a second time */
+#ifdef CONFIG_X86_32	
 	regs.fs = __KERNEL_PERCPU;
+#else /* CONFIG_X86_32 */
+        regs.di = __PER_CPU_SEG;
+#endif /* CONFIG_X86_64 */
 	regs.cs = __KERNEL_CS | get_kernel_rpl();
 	/* Ok, create the new process.. */
 	return do_fork(flags | SIGCHLD | CLONE_UNTRACED, 0, &regs, 0, NULL, NULL);
