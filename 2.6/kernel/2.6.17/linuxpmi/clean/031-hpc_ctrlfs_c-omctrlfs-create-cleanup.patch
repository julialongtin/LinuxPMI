Index: linux/hpc/ctrlfs.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux/hpc/ctrlfs.c	2006-09-28 15:02:18.000000000 +0200
@@ -0,0 +1,60 @@
+/*
+ *	Copyright (C) 2006 Vincent Hanquez <vincent@snarc.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published
+ * by the Free Software Foundation; version 2 only.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#include <linux/config.h>
+#include <linux/module.h>
+#include <linux/fs.h>
+#include <linux/mount.h>
+
+#define CTRLFS_MAGIC	0x29012508
+
+static struct vfsmount *ctrlfs_mount;
+static int ctrlfs_mount_count;
+
+static int ctrlfs_fill_super(struct super_block *sb, void *data, int silent)
+{
+	static struct tree_descr debug_files[] = {{""}};
+
+	return simple_fill_super(sb, CTRLFS_MAGIC, debug_files);
+}
+
+static struct super_block *ctrlfs_get_sb(struct file_system_type *fs_type,
+                                         int flags, const char *dev_name,
+                                         void *data)
+{
+	return get_sb_single(fs_type, flags, data, ctrlfs_fill_super);
+}
+
+static struct file_system_type ctrl_fs_type = {
+	.owner =	THIS_MODULE,
+	.name =		"omctrlfs",
+	.get_sb =	ctrlfs_get_sb,
+	.kill_sb =	kill_litter_super,
+};
+
+int __init om_ctrlfs_init(void)
+{
+	return register_filesystem(&ctrl_fs_type);
+}
+
+void __exit om_ctrlfs_exit(void)
+{
+	simple_release_fs(&ctrlfs_mount, &ctrlfs_mount_count);
+	unregister_filesystem(&ctrl_fs_type);
+}
+
+module_init(om_ctrlfs_init);
+module_exit(om_ctrlfs_exit);
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Vincent Hanquez");
